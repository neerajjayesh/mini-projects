import tkinter as tk
from tkinter import ttk
import string

def check_password_strength(password):
    """Return (score, feedback) based on password strength."""
    score = 0
    feedback = []

    # Criteria checks
    length = len(password)
    has_lower = any(c.islower() for c in password)
    has_upper = any(c.isupper() for c in password)
    has_digit = any(c.isdigit() for c in password)
    has_symbol = any(c in string.punctuation for c in password)

    # Scoring logic
    if length >= 8:
        score += 2
    elif length >= 5:
        score += 1
    else:
        feedback.append("Use at least 8 characters.")

    if has_lower:
        score += 1
    else:
        feedback.append("Add lowercase letters.")

    if has_upper:
        score += 2
    else:
        feedback.append("Add uppercase letters.")

    if has_digit:
        score += 2
    else:
        feedback.append("Add numbers.")

    if has_symbol:
        score += 3
    else:
        feedback.append("Add symbols like !, @, #, etc.")

    # Cap the score at 10
    score = min(score, 10)

    # Overall feedback
    if score >= 8:
        summary = "Strong password üí™"
    elif score >= 5:
        summary = "Moderate password ‚ö†Ô∏è"
    else:
        summary = "Weak password ‚ùå"

    return score, summary, feedback


def on_check():
    password = entry.get()
    score, summary, feedback = check_password_strength(password)

    # Update progress bar and labels
    strength_var.set(score)
    result_label.config(text=f"Strength: {score}/10 ‚Äî {summary}")
    feedback_text = "\n".join(feedback)
    feedback_label.config(text=feedback_text)


# --- Tkinter GUI setup ---
root = tk.Tk()
root.title("Password Strength Checker")
root.geometry("400x300")
root.resizable(False, False)

# Entry field
tk.Label(root, text="Enter your password:", font=("Arial", 12)).pack(pady=10)
entry = ttk.Entry(root, show="*", width=30)
entry.pack(pady=5)

# Button
ttk.Button(root, text="Check Strength", command=on_check).pack(pady=10)

# Progress bar
strength_var = tk.IntVar()
progress = ttk.Progressbar(root, length=300, variable=strength_var, maximum=10)
progress.pack(pady=10)

# Results
result_label = tk.Label(root, text="", font=("Arial", 11, "bold"))
result_label.pack(pady=5)

feedback_label = tk.Label(root, text="", font=("Arial", 10), fg="gray")
feedback_label.pack(pady=5)

root.mainloop()
